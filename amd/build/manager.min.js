define("customfield_sprogramme/manager",["exports","customfield_sprogramme/local/state","customfield_sprogramme/local/repository","core/templates","core/notification","core/str","core/utils","./local/components/table"],(function(_exports,_state,_repository,_templates,_notification,_str,_utils,_table){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_state=_interopRequireDefault(_state),_repository=_interopRequireDefault(_repository),_templates=_interopRequireDefault(_templates),_notification=_interopRequireDefault(_notification);class Manager{constructor(element,courseid){_defineProperty(this,"rowNumber",0),_defineProperty(this,"courseid",void 0),_defineProperty(this,"element",void 0),_defineProperty(this,"table","customfield_sprogramme"),_defineProperty(this,"columns",[]),this.element=element,this.courseid=parseInt(courseid),this.addEventListeners(),this.getDatagrid()}addEventListeners(){const form=document.querySelector('[data-region="app"]');form.addEventListener("click",(e=>{let btn=e.target.closest("[data-action]");btn&&(e.preventDefault(),this.actions(btn))})),form.addEventListener("change",(e=>{const input=e.target.closest("[data-input]");input&&this.change(input);const modulename=e.target.closest('[data-region="modulename"]');modulename&&this.changeModule(modulename)})),form.addEventListener("keydown",(e=>{"ArrowDown"!==e.key&&"ArrowUp"!==e.key||(this.navigate(e),e.preventDefault()),"Enter"===e.key&&e.preventDefault()})),form.addEventListener("submit",(e=>{e.preventDefault()}));let dragging=null;form.addEventListener("dragstart",(e=>{"TR"===e.target.tagName&&(dragging=e.target,e.target.effectAllowed="move")})),form.addEventListener("dragover",(e=>{e.preventDefault();const target=e.target.closest("tr");if(target&&target!==dragging&&"rows"===target.parentNode.dataset.region){const rect=target.getBoundingClientRect();e.clientY-rect.top>rect.height/2?target.parentNode.insertBefore(dragging,target.nextSibling):target.parentNode.insertBefore(dragging,target)}})),form.addEventListener("drop",(e=>{e.preventDefault()})),form.addEventListener("dragend",(e=>{const rowId=dragging.dataset.index,prevRowId=dragging.previousElementSibling?dragging.previousElementSibling.dataset.index:0,moduleId=dragging.closest('[data-region="module"]').dataset.id;window.console.log("RowId: "+rowId+" PrevRowId: "+prevRowId+" ModuleId: "+moduleId),_repository.default.updateSortOrder({type:"row",courseid:this.courseid,moduleid:moduleId,id:rowId,previd:prevRowId}),dragging=null,e.preventDefault()}));document.querySelector('[data-region="disciplineform"]').querySelector('input[type="search"]').addEventListener("input",(e=>{const input=e.target.closest("input");input&&this.typeahead(input)}))}async getDatagrid(){await this.getTableData(),await this.getTableConfig()}async getTableConfig(){const response=await _repository.default.getColumns({table:this.table});await _state.default.setValue("columns",response.columns)}async getTableData(){try{const response=await _repository.default.getData({courseid:this.courseid});if(response.modules.length>0){const modules=this.parseModules(response.modules);_state.default.setValue("modules",modules)}else{const moduleid=await this.createModule("Module 1",0);await this.createRow(moduleid,0,0),this.getTableData()}}catch(error){_notification.default.exception(error)}}parseModules(modules){return modules.forEach((mod=>{mod.rows.map((row=>(row.cells=row.cells.map((cell=>{const column=mod.columns.find((column=>column.column==cell.column));return"select"===(cell=Object.assign({},cell,column)).type&&(cell.options=cell.options.map((option=>{const clonedOption=Object.assign({},option);return clonedOption.name==cell.value&&(clonedOption.selected=!0),clonedOption}))),cell.edit=!0,cell})),row)))})),modules}getRowObject(){return{rows:{id:"id",sortorder:"sortorder",cells:{type:"type",column:"column",value:"value"},disciplines:{id:"id",name:"name",percentage:"percentage"}}}}cleanModules(modules){const cleanedModules=[];return modules.forEach((module=>{const rows=module.rows,rowObject=this.getRowObject(),cleanedRows=rows.map((row=>{const cleanedRow={};return Object.keys(rowObject.rows).forEach((key=>{cleanedRow[key]=row[key]})),cleanedRow.cells=row.cells.map((cell=>{const cleanedCell={};return Object.keys(rowObject.rows.cells).forEach((key=>{cleanedCell[key]=cell[key]})),cleanedCell})),cleanedRow.disciplines=row.disciplines.map((discipline=>{const cleanedDiscipline={};return Object.keys(rowObject.rows.disciplines).forEach((key=>{cleanedDiscipline[key]=discipline[key]})),cleanedDiscipline})),cleanedRow})),cleanedModule={};cleanedModule.id=module.moduleid,cleanedModule.sortorder=module.modulesortorder,cleanedModule.name=module.modulename,cleanedModule.rows=cleanedRows,cleanedModules.push(cleanedModule)})),cleanedModules}async setTableData(){(0,_utils.debounce)((async()=>{const modules=_state.default.getValue("modules"),cleanedModules=this.cleanModules(modules);await _repository.default.setData({courseid:this.courseid,modules:cleanedModules})||_notification.default.exception("No response from the server")}),600)()}actions(btn){if("addrow"===btn.dataset.action&&this.addRow(btn),"deleterow"===btn.dataset.action&&this.deleteRow(btn),"addmodule"===btn.dataset.action&&this.addModule(btn),"deletemodule"===btn.dataset.action&&this.deleteModule(btn),"adddisc"===btn.dataset.action&&this.showDisciplineForm(btn),"removedisc"===btn.dataset.action&&this.removeDiscipline(btn),"closedisciplineform"===btn.dataset.action&&this.closeDisciplineForm(),"selectdiscipline"===btn.dataset.action){const option=btn.closest("[data-option]"),discipline={id:option.dataset.id,name:option.textContent};this.setDisciplineForm(discipline)}"discipline-confirm"===btn.dataset.action&&this.addDiscipline()}async addRow(btn){const modules=_state.default.getValue("modules"),rowid=btn.closest("[data-row]").dataset.index,moduleid=btn.closest('[data-region="module"]').dataset.id,rows=modules.find((m=>m.moduleid==moduleid)).rows,row=await this.createRow(moduleid,rowid);row&&(rows.splice(rows.indexOf(rows.find((r=>r.id==rowid)))+1,0,row),_state.default.setValue("modules",modules))}async createRow(moduleid,prevrowid){const rowid=await _repository.default.createRow({courseid:this.courseid,moduleid:moduleid,prevrowid:prevrowid});return new Promise((resolve=>{const row={};row.id=rowid;const columns=_state.default.getValue("columns");void 0!==columns?(row.cells=columns.map((column=>structuredClone(column))),row.cells.forEach((cell=>{cell.edit=!0,cell.value="",cell[cell.type]=!0})),row.disciplines=[],resolve(row)):resolve()}))}async deleteRow(btn){const modules=_state.default.getValue("modules"),rowid=btn.closest("[data-row]").dataset.index,moduleid=btn.closest('[data-region="module"]').dataset.id,module=modules.find((m=>m.moduleid==moduleid)),response=await _repository.default.deleteRow({courseid:this.courseid,rowid:rowid});return new Promise((resolve=>{if(response){const rows=module.rows,index=Array.from(btn.closest('[data-region="rows"]').children).indexOf(btn.closest("[data-row]"));rows.splice(index,1),this.resetRowSortorder(),_state.default.setValue("modules",modules)}resolve(rowid)}))}change(input){const row=input.closest("[data-row]"),cell=input.closest("[data-cell]"),value=input.value,columnid=cell.dataset.columnid,index=row.dataset.index;_state.default.getValue("modules").forEach((module=>{const rowIndex=module.rows.findIndex((r=>r.id==index));if(-1===rowIndex)return;const cellIndex=module.rows[rowIndex].cells.findIndex((c=>c.columnid==columnid));module.rows[rowIndex].cells[cellIndex].value=value})),this.setTableData()}changeModule(input){const moduleid=input.closest('[data-region="module"]').dataset.id,name=input.value;_state.default.getValue("modules").forEach((module=>{module.moduleid==moduleid&&(module.modulename=name)})),this.setTableData()}async deleteModule(btn){const modules=_state.default.getValue("modules"),moduleid=btn.closest('[data-region="module"]').dataset.id,module=modules.find((m=>m.moduleid==moduleid)),response=await _repository.default.deleteModule({courseid:this.courseid,moduleid:moduleid});return new Promise((resolve=>{if(response){const index=modules.indexOf(module);modules.splice(index,1),_state.default.setValue("modules",modules)}resolve(moduleid)}))}async createModule(name,index){const id=await _repository.default.createModule({name:name,courseid:this.courseid,sortorder:index});return new Promise((resolve=>{resolve(id)}))}async addModule(btn){const modules=_state.default.getValue("modules"),moduleRow=btn.closest('[data-region="module"]'),index=Array.from(moduleRow.parentElement.children).indexOf(moduleRow),moduleid=await this.createModule("Module "+(index+2),index),module={moduleid:moduleid,modulesortorder:index+1,modulename:"Module "+(index+1),rows:[await this.createRow(moduleid,0)]};modules.push(module),_state.default.setValue("modules",modules)}getRow(rowid){return _state.default.getValue("modules").reduce(((acc,module)=>acc.concat(module.rows)),[]).find((r=>r.id==rowid))}resetRowSortorder(){const modules=_state.default.getValue("modules");modules.forEach((module=>{module.rows.forEach(((row,index)=>{row.sortorder=index}))})),_state.default.setValue("modules",modules)}typeahead(input){const value=input.value;document.querySelector('[data-region="disciplineform"]').querySelectorAll("[data-option]").forEach((option=>{this.removeMatchBold(option),option.textContent.toLowerCase().includes(value.toLowerCase())?(option.classList.remove("d-none"),this.makeMatchBold(option,value)):option.classList.add("d-none")}))}makeMatchBold(option,value){const text=option.textContent,index=text.toLowerCase().indexOf(value.toLowerCase()),first=text.slice(0,index),match=text.slice(index,index+value.length),last=text.slice(index+value.length);option.innerHTML=first+"<strong>"+match+"</strong>"+last}removeMatchBold(option){option.innerHTML=option.textContent}async showDisciplineForm(btn){const row=btn.closest("[data-row]"),module=btn.closest('[data-region="module"]'),form=document.querySelector('[data-region="disciplineform"]');form.querySelector("#rowid").value=row.dataset.index;const arrow=form.querySelector(".formarrow"),rows=module.querySelectorAll('[data-region="rows"] [data-row]'),rowArray=Array.from(rows),index=rowArray.indexOf(row);form.querySelector('[data-region="rownumber"]').textContent=await(0,_str.getString)("row","customfield_sprogramme",index+1);const setindex=index-8;let attachTo,attachToButton;setindex>0?(attachTo=rowArray[setindex].querySelector("[data-disciplines]"),attachToButton=rowArray[setindex].querySelector('[data-action="adddisc"]')):(attachTo=rowArray[0].querySelector("[data-disciplines]"),attachToButton=rowArray[0].querySelector('[data-action="adddisc"]')),attachTo.appendChild(form);const rectBtn=btn.getBoundingClientRect(),rectAttachToButton=attachToButton.getBoundingClientRect();arrow.style.top=rectBtn.top-rectAttachToButton.top+"px",this.renderFormDisciplines(row.dataset.index)}closeDisciplineForm(){const container=document.querySelector('[data-region="disciplineform-container"]'),form=document.querySelector('[data-region="disciplineform"]');container.appendChild(form)}async setDisciplineForm(discipline){const form=document.querySelector('[data-region="disciplineform"]'),formFieldSearch=form.querySelector('input[type="search"]'),formFieldValue=form.querySelector("#discipline-value"),formFieldDiscipline=form.querySelector("#discipline-id"),formFieldDisciplineName=form.querySelector("#discipline-name"),formFieldLastIds=form.querySelector("#lastids");formFieldDiscipline.value=discipline.id,formFieldDisciplineName.value=discipline.name,formFieldSearch.value=discipline.name;const lastIds=formFieldLastIds.value.split(",");lastIds.includes(discipline.id)||(lastIds.push(discipline.id),formFieldLastIds.value=lastIds.join(",")),formFieldValue.focus()}async addDiscipline(){const form=document.querySelector('[data-region="disciplineform"]'),rowid=form.querySelector("#rowid").value,disciplineid=form.querySelector("#discipline-id").value,disciplinevalue=form.querySelector("#discipline-value").value,discipline={id:disciplineid,name:form.querySelector("#discipline-name").value,percentage:disciplinevalue},row=this.getRow(rowid),disciplineIndex=row.disciplines.findIndex((d=>d.id==discipline.id)),container=document.querySelector('[data-disciplines][data-rowid="'+rowid+'"] [data-region="container-disciplines"]'),selectedcontainer=form.querySelector('[data-region="selected-disciplines"]');if(disciplineIndex>-1){row.disciplines[disciplineIndex]=discipline;const rendered=container.querySelector('[data-id="'+discipline.id+'"]'),selected=selectedcontainer.querySelector('[data-id="'+discipline.id+'"]'),{html:html,js:js}=await _templates.default.renderForPromise("customfield_sprogramme/table/discipline",discipline);await _templates.default.replaceNode(rendered,html,js),await _templates.default.replaceNode(selected,html,js)}else{row.disciplines.push(discipline);const{html:html,js:js}=await _templates.default.renderForPromise("customfield_sprogramme/table/discipline",discipline);await _templates.default.appendNodeContents(container,html,js),await _templates.default.appendNodeContents(selectedcontainer,html,js)}this.setTableData()}async renderFormDisciplines(rowid){const disciplines=this.getRow(rowid).disciplines,container=document.querySelector('[data-region="disciplineform"]').querySelector('[data-region="selected-disciplines"]');container.innerHTML="",disciplines.forEach((async discipline=>{const{html:html,js:js}=await _templates.default.renderForPromise("customfield_sprogramme/table/discipline",discipline);_templates.default.appendNodeContents(container,html,js)}))}async removeDiscipline(btn){const rowid=document.querySelector('[data-region="disciplineform"]').querySelector("#rowid").value,disciplineid=btn.closest("[data-id]").dataset.id,row=this.getRow(rowid),index=row.disciplines.findIndex((d=>d.id==disciplineid));row.disciplines.splice(index,1);const container=document.querySelector('[data-disciplines][data-rowid="'+rowid+'"] [data-region="container-disciplines"]'),selectedcontainer=document.querySelector('[data-region="selected-disciplines"]'),discipline=container.querySelector('[data-id="'+disciplineid+'"]'),selected=selectedcontainer.querySelector('[data-id="'+disciplineid+'"]');container.removeChild(discipline),selectedcontainer.removeChild(selected),this.setTableData()}navigate(e){const currentIndex=e.target.closest("[data-row]").dataset.index,currentColumn=e.target.closest("[data-cell]").dataset.columnid,allRows=document.querySelectorAll("[data-row]");for(let i=0;i<allRows.length;i++)if(allRows[i].dataset.index==currentIndex){if("ArrowDown"===e.key&&i<allRows.length-1){const nextInput=allRows[i+1].querySelector('[data-columnid="'.concat(currentColumn,'"] input'));nextInput&&nextInput.focus()}if("ArrowUp"===e.key&&i>0){const previousInput=allRows[i-1].querySelector('[data-columnid="'.concat(currentColumn,'"] input'));previousInput&&previousInput.focus()}}if("ArrowRight"===e.key){const nextColumn=e.target.closest("[data-cell]").nextElementSibling;nextColumn&&nextColumn.focus()}if("ArrowLeft"===e.key){const previousColumn=e.target.closest("[data-cell]").previousElementSibling;previousColumn&&previousColumn.focus()}}}var _default={init:(element,courseid)=>{new Manager(element,courseid)}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=manager.min.js.map