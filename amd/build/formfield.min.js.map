{"version":3,"file":"formfield.min.js","sources":["../src/formfield.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module formfield\n *\n * @module     customfield_sprogramme/formfield\n * @copyright  2025 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Templates from 'core/templates';\nimport Repository from 'customfield_sprogramme/local/repository';\nimport {getString} from 'core/str';\nimport Modal from 'core/modal';\n/*\n * Initialise\n * @param {HTMLElement} element The element.\n * @param {String} courseid The courseid.\n */\nconst init = (element, courseid) => {\n    element.addEventListener('click', async(event) => {\n        event.preventDefault();\n        const rendercontainer = await getProgramme(courseid);\n\n        const modal = await Modal.create({\n            large: true,\n            title: getString('editprogramme', 'customfield_sprogramme'),\n            body: rendercontainer,\n            show: true,\n        });\n\n        modal.getModal().addClass('modal-customfield_sprogramme');\n    });\n};\n\n/**\n * Get the disciplines.\n */\n\n\n/**\n * Get the programme.\n * @param {String} courseid The courseid.\n * @return {Promise} The programme.\n */\nconst getProgramme = async(courseid) => {\n    // Create the programme if it does not exist.\n    let container = document.querySelector('.customfield_sprogramme');\n    if (container) {\n        return Promise.resolve(container);\n    }\n    const disciplines = await Repository.getDisciplines();\n    const {html, js} = await Templates.renderForPromise('customfield_sprogramme/programme',\n        {courseid: courseid, disciplines: disciplines});\n    const rendercontainer = document.createElement('div');\n    rendercontainer.classList.add('customfield_sprogramme');\n    Templates.replaceNodeContents(rendercontainer, html, js);\n    return rendercontainer;\n};\n\nexport default {\n    init: init,\n};"],"names":["getProgramme","async","container","document","querySelector","Promise","resolve","disciplines","Repository","getDisciplines","html","js","Templates","renderForPromise","courseid","rendercontainer","createElement","classList","add","replaceNodeContents","init","element","addEventListener","event","preventDefault","Modal","create","large","title","body","show","getModal","addClass"],"mappings":";;;;;;;+NAyDMA,aAAeC,MAAAA,eAEbC,UAAYC,SAASC,cAAc,8BACnCF,iBACOG,QAAQC,QAAQJ,iBAErBK,kBAAoBC,oBAAWC,kBAC/BC,KAACA,KAADC,GAAOA,UAAYC,mBAAUC,iBAAiB,mCAChD,CAACC,SAAUA,SAAUP,YAAaA,cAChCQ,gBAAkBZ,SAASa,cAAc,cAC/CD,gBAAgBE,UAAUC,IAAI,6CACpBC,oBAAoBJ,gBAAiBL,KAAMC,IAC9CI,8BAGI,CACXK,KA1CS,CAACC,QAASP,YACnBO,QAAQC,iBAAiB,SAASrB,MAAAA,QAC9BsB,MAAMC,uBACAT,sBAAwBf,aAAac,iBAEvBW,eAAMC,OAAO,CAC7BC,OAAO,EACPC,OAAO,kBAAU,gBAAiB,0BAClCC,KAAMd,gBACNe,MAAM,KAGJC,WAAWC,SAAS"}